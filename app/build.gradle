/*
 * PackList is an open-source packing-list for Android
 *
 * Copyright (c) 2016 Nicolas Bossard.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


apply plugin: 'com.android.application'
apply plugin: 'groovyx.grooid.groovy-android'
apply plugin: 'com.jakewharton.hugo'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    // Reminder
    // API level 14 ===> Android 4.0
    // history of version code
    // 1 --> 0.1
    // 2 --> 0.2
    // 3 --> 0.3
    // 4 --> 0.3.4
    // 5 --> 0.4
    // 6 --> 0.5
    // 7 --> 0.6
    // 8 --> 0.7 (published 19th march 2016)
    // 9 --> 0.7.1 (published 22nd march 2016)
    // 10 --> 0.7.2 (published 24nd march 2016)
    // 11 --> 0.8
    defaultConfig {
        applicationId "com.nbossard.packlist"
        // 11 because of use of startActionMode in list selection
        // 14 because of use of setTag in list
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 10
        versionName "0.7.2"
    }
    buildTypes {
        release {
            // setting minifyEnabled to false will disable proguard
            // and consequently allow easy crash report understanding
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Note : added in version 0.7.1 the date using versionNameSuffix
            // this caused version to be rejected on f-droid
            // So removed it in release mode and moved to aboutAdditionalInfo only in debug mode
            resValue "string", "about__additional__info", ""
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " DEBUG "
            resValue "string", "about__additional__info", getDate() + " " + getGitSha1() + " " + getWorkingBranch() + "\n"
        }
    }

    // see :
    // http://developer.android.com/tools/data-binding/guide.html
    dataBinding {
        enabled = true
    }

    lintOptions {
        disable 'InvalidPackage' // lint sees references in the grooid jar to unavailable java classes
    }
}

androidGroovy {
    options {
        configure(groovyOptions) {
            forkOptions.jvmArgs = ['-noverify']
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.0.1-SNAPSHOT'
    compile 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    compile 'org.codehaus.groovy:groovy:2.4.5:grooid'

    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.5.3'

}

// ----------------------- tool for getting build date --------

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

// ----------------------- tool for getting git SHA1 --------
/*
 * Gets the version name from the latest Git tag
 */
def getGitSha1() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short=7', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
// ----------------------- tool for getting git branch --------
/*
 * Gets the version name from the latest Git tag
 */
def getWorkingBranch() {

    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

// NBO : what for ??
// configurations.all {
//     resolutionStrategy.force 'com.android.support:support-annotations:23.0.1'
//}
